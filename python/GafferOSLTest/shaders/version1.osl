//////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2016, Image Engine Design Inc. All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
//
//      * Redistributions of source code must retain the above
//        copyright notice, this list of conditions and the following
//        disclaimer.
//
//      * Redistributions in binary form must reproduce the above
//        copyright notice, this list of conditions and the following
//        disclaimer in the documentation and/or other materials provided with
//        the distribution.
//
//      * Neither the name of John Haddon nor the names of
//        any other contributors to this software may be used to endorse or
//        promote products derived from this software without specific prior
//        written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
//  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//////////////////////////////////////////////////////////////////////////

struct TestStruct
{

	// Fields shared with version 1
	int commonI;
	float commonF;
	color commonColor;
	string commonString;

	// Fields removed in version 2
	int removedI;
	float removedF;
	color removedColor;
	string removedString;

	// Fields which change type in version 2
	int typeChanged1;
	float typeChanged2;
	color typeChanged3;
	string typeChanged4;

};

shader version1
(

	// Parameters shared with version 1

	int commonI = 2,
	float commonF = 3,
	color commonColor = 1,
	string commonString = "ss",
	TestStruct commonStruct = { 1, 2, color( 1, 2, 3 ), "s", 2, 4, color( 2, 3, 4 ), "t", 1, 2, 3, "four" },
	float commonArray[3] = { 0, 1, 2 },

	// Parameters added in version 2

	int removedI = 3,
	float removedF = 4,
	color removedColor = 5,
	string removedString = "tt",
	TestStruct removedStruct = { 1, 2, color( 1, 2, 3 ), "s", 2, 4, color( 2, 3, 4 ), "t", 1, 2, 3, "four" },

	// Parameters which change type in version 2

	int typeChanged1 = 1,
	float typeChanged2 = 2,
	color typeChanged3 = 3,
	string typeChanged4 = "four",

	// Parameters which change defaults in version 2
	float defaultChangedArray[3] = { 0, 1, 2 },

	output color c = 0

)
{
}
